<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xsy.dao.VideoDao">

    <resultMap type="com.xsy.entity.video.Video" id="VideoMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="intro" column="intro" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="link" column="link" jdbcType="VARCHAR"/>
        <result property="categoryId" column="category_id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--插入历史记录-->
    <insert id="insertPlayed" parameterType="com.xsy.entity.user.Played">
        insert into played(uid,video_id,created_at) values (#{uid},#{videoId},#{createdAt})
    </insert>

    <update id="updatePlayed" parameterType="com.xsy.entity.user.Played">
        update played
            <set>
<!--                <if test="uid!=null">-->
<!--                    uid=#{uid},-->
<!--                </if>-->
<!--                <if test="videoId!=null">-->
<!--                    video_id=#{videoId},-->
<!--                </if>-->
<!--                <if test="createdAt!=null">-->
<!--                    created_at=#{createdAt},-->
<!--                </if>-->
                <if test="createdAt!=null">
                    created_at=#{createdAt}
                </if>
            </set>
            where id=#{id}
    </update>


    <!--查询历史记录表-->
    <select id="queryByUidAndVid" resultType="com.xsy.entity.user.Played">
        select id,uid,video_id as videoId,created_at as createdAt from played where video_id=#{video_id} and uid=#{uid}
    </select>


    <!--查询单个-->
    <select id="queryById" resultMap="VideoMap">
        select id,
               title,
               intro,
               uid,
               cover,
               link,
               category_id,
               created_at,
               updated_at
        from watermelon.video
        where id = #{id}
    </select>

    <!--分页查询数据-->
    <select id="queryAllByLimit" resultType="com.xsy.entity.video.VideoVO">
        select v.id,
               v.title,
               v.intro,
               v.cover,
               v.link,
               u.name       uploader,
               v.created_at createdAt,
               c.name       category
        from video v
                 left join user u on v.uid = u.id
                 left join category c on v.category_id = c.id


            limit #{start}, #{pageSize}
    </select>


    <!--分页查询数据总数-->
    <select id="queryAllCount" resultType="int">
        select count(*)
        from video v
                 left join user u on v.uid = u.id
                 left join category c on v.category_id = c.id
    </select>

    <!--通过类别分页查询视频-->
    <select id="queryByCategory" resultType="com.xsy.entity.video.VideoVO">
        select v.id,
               v.title,
               v.intro,
               v.cover,
               v.link,
               u.name       uploader,
               v.created_at createdAt,
               c.name       category
        from video v
                 left join user u on v.uid = u.id
                 left join category c on v.category_id = c.id

                 where c.id=#{category_id}


            limit #{start}, #{pageSize}


    </select>


    <!--通过类别分页查询视频总数-->
    <select id="queryByCategoryCount" resultType="int">
        select count(*)
        from video v
                 left join user u on v.uid = u.id
                 left join category c on v.category_id = c.id
        where c.id=#{category_id}

    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="VideoMap">
        select
        id, title, intro, uid, cover, link, category_id, created_at, updated_at
        from watermelon.video
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="intro != null and intro != ''">
                and intro = #{intro}
            </if>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="cover != null and cover != ''">
                and cover = #{cover}
            </if>
            <if test="link != null and link != ''">
                and link = #{link}
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into watermelon.video(title, intro, uid, cover, link, category_id, created_at, updated_at)
        values (#{title}, #{intro}, #{uid}, #{cover}, #{link}, #{categoryId}, #{createdAt}, #{updatedAt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into watermelon.video(title, intro, uid, cover, link, category_id, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.intro}, #{entity.uid}, #{entity.cover}, #{entity.link}, #{entity.categoryId},
            #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into watermelon.video(title, intro, uid, cover, link, category_id, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.intro}, #{entity.uid}, #{entity.cover}, #{entity.link}, #{entity.categoryId},
            #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
        on duplicate key update
        title = values(title) , intro = values(intro) , uid = values(uid) , cover = values(cover) , link = values(link)
        , category_id = values(category_id) , created_at = values(created_at) , updated_at = values(updated_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update watermelon.video
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="intro != null and intro != ''">
                intro = #{intro},
            </if>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="cover != null and cover != ''">
                cover = #{cover},
            </if>
            <if test="link != null and link != ''">
                link = #{link},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from watermelon.video
        where id = #{id}
    </delete>

</mapper>

